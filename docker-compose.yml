version: '3.8'

# üöÄ Êó†Â§¥Â∑•ÂÖ∑Á´ô CMS - ÂÆåÊï¥ÈÉ®ÁΩ≤ÈÖçÁΩÆ
# ÂåÖÂê´ÊâÄÊúâÂºÄÊ∫êÊúçÂä°ÁöÑ‰ºÅ‰∏öÁ∫ßÈÉ®ÁΩ≤ÊñπÊ°à

services:
  # MongoDB ‰∏ªÊï∞ÊçÆÂ∫ì
  mongodb:
    image: mongo:6-alpine
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-HeadlessTools2024!}
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - headless-tools
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Payload CMS Ê†∏ÂøÉÊúçÂä°
  payload:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URI: mongodb://admin:${MONGO_PASSWORD:-HeadlessTools2024!}@mongodb:27017/headless-tools?authSource=admin
      PAYLOAD_SECRET: ${PAYLOAD_SECRET:-HeadlessToolsSecretKey2024}
      PAYLOAD_PUBLIC_SERVER_URL: ${PAYLOAD_URL:-http://localhost:3000}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
      
      # ÂºÄÊ∫êÊúçÂä°ÈõÜÊàêÈÖçÁΩÆ
      UMAMI_URL: http://umami:3000
      UMAMI_TOKEN: ${UMAMI_TOKEN:-}
      UMAMI_WEBSITE_ID: ${UMAMI_WEBSITE_ID:-}
      
      LISTMONK_URL: http://listmonk:9000
      LISTMONK_AUTH: ${LISTMONK_AUTH:-YWRtaW46YWRtaW4xMjM=}
      
      GRAFANA_URL: http://grafana:3000
      GRAFANA_TOKEN: ${GRAFANA_TOKEN:-}
      
      UPTIME_KUMA_URL: http://uptime-kuma:3001
      
      # Redis ÁºìÂ≠ò
      REDIS_URL: redis://redis:6379
      
      # ÈÇÆ‰ª∂ÈÖçÁΩÆ
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - payload_uploads:/app/uploads
      - payload_logs:/app/logs
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis ÁºìÂ≠òÊúçÂä°
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Umami ÁΩëÁ´ôÂàÜÊûê
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://umami:${POSTGRES_PASSWORD:-umami123}@umami-db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: ${UMAMI_SECRET:-umami-secret-key-2024}
      TRACKER_SCRIPT_NAME: script.js
      DISABLE_TELEMETRY: 1
    ports:
      - "3100:3000"
    depends_on:
      - umami-db
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  umami-db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-umami123}
    volumes:
      - umami_db_data:/var/lib/postgresql/data
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U umami"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Listmonk ÈÇÆ‰ª∂Ëê•ÈîÄ
  listmonk:
    image: listmonk/listmonk:latest
    restart: unless-stopped
    environment:
      LISTMONK_app__address: "0.0.0.0:9000"
      LISTMONK_db__host: listmonk-db
      LISTMONK_db__port: 5432
      LISTMONK_db__user: listmonk
      LISTMONK_db__password: ${POSTGRES_PASSWORD:-listmonk123}
      LISTMONK_db__database: listmonk
      LISTMONK_db__ssl_mode: disable
    ports:
      - "9000:9000"
    depends_on:
      - listmonk-db
    volumes:
      - ./docker/listmonk-config.toml:/listmonk/config.toml:ro
      - listmonk_uploads:/listmonk/uploads
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  listmonk-db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: listmonk
      POSTGRES_USER: listmonk
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-listmonk123}
    volumes:
      - listmonk_db_data:/var/lib/postgresql/data
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U listmonk"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus ÊåáÊ†áÊî∂ÈõÜ
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana ÁõëÊéßÈù¢Êùø
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SMTP_ENABLED: true
      GF_SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com:587}
      GF_SMTP_USER: ${SMTP_USER:-}
      GF_SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      GF_SMTP_FROM_ADDRESS: ${SMTP_USER:-}
    ports:
      - "3200:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Uptime Kuma ÂèØÁî®ÊÄßÁõëÊéß
  uptime-kuma:
    image: louislam/uptime-kuma:1-alpine
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - uptime_kuma_data:/app/data
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter (Á≥ªÁªüÊåáÊ†á)
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - headless-tools

  # cAdvisor (ÂÆπÂô®ÊåáÊ†á)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - headless-tools

  # Nginx ÂèçÂêë‰ª£ÁêÜ
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - payload
      - umami
      - listmonk
      - grafana
      - uptime-kuma
    networks:
      - headless-tools
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
  redis_data:
  umami_db_data:
  listmonk_db_data:
  listmonk_uploads:
  prometheus_data:
  grafana_data:
  uptime_kuma_data:
  payload_uploads:
  payload_logs:
  nginx_logs:

networks:
  headless-tools:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
